{"ast":null,"code":"import { filter, fromEvent, map } from \"rxjs\";\nexport class UserActionManager {\n  static getPointerDownEvent(doc) {\n    return fromEvent(doc, \"pointerdown\").pipe(map(pointerDown => pointerDown));\n  }\n  static getPointerMoveEvent(doc) {\n    return fromEvent(doc, \"pointermove\").pipe(filter(pointerMove => pointerMove.pressure > 0));\n  }\n  static getPointerUpEvent(doc) {\n    return fromEvent(doc, \"pointerup\").pipe(map(pointerUp => pointerUp));\n  }\n  static getTouchStartEvent(doc) {\n    return fromEvent(doc, \"touchstart\").pipe(map(touchStart => touchStart));\n  }\n  static getTouchMoveEvent(doc) {\n    return fromEvent(doc, \"touchmove\").pipe(map(touchMove => touchMove));\n  }\n  static getTouchEndEvent(doc) {\n    return fromEvent(doc, \"touchend\").pipe(map(touchEnd => touchEnd));\n  }\n}","map":{"version":3,"names":["filter","fromEvent","map","UserActionManager","getPointerDownEvent","doc","pipe","pointerDown","getPointerMoveEvent","pointerMove","pressure","getPointerUpEvent","pointerUp","getTouchStartEvent","touchStart","getTouchMoveEvent","touchMove","getTouchEndEvent","touchEnd"],"sources":["C:\\Workspace\\touchMove_delay\\src\\app\\user-action-manager.ts"],"sourcesContent":["import {filter, fromEvent, map, Observable} from \"rxjs\";\r\n\r\nexport class UserActionManager {\r\n\r\n\r\n    public static getPointerDownEvent(doc: Document): Observable<PointerEvent> {\r\n        return fromEvent(doc, \"pointerdown\").pipe(\r\n            map((pointerDown: PointerEvent) => pointerDown)\r\n        )\r\n    }\r\n\r\n    public static getPointerMoveEvent(doc: Document): Observable<PointerEvent> {\r\n        return fromEvent(doc, \"pointermove\").pipe(\r\n            filter((pointerMove: PointerEvent) => pointerMove.pressure > 0)\r\n        )\r\n    }\r\n\r\n    public static getPointerUpEvent(doc: Document): Observable<PointerEvent> {\r\n        return fromEvent(doc, \"pointerup\").pipe(\r\n            map((pointerUp: PointerEvent) => pointerUp)\r\n        )\r\n    }\r\n\r\n    public static getTouchStartEvent(doc: Document): Observable<TouchEvent> {\r\n        return fromEvent(doc, \"touchstart\").pipe(\r\n            map((touchStart: TouchEvent) => touchStart)\r\n        )\r\n    }\r\n\r\n    public static getTouchMoveEvent(doc: Document): Observable<TouchEvent> {\r\n        return fromEvent(doc, \"touchmove\").pipe(\r\n            map((touchMove: TouchEvent) => touchMove)\r\n        )\r\n    }\r\n\r\n    public static getTouchEndEvent(doc: Document): Observable<TouchEvent> {\r\n        return fromEvent(doc, \"touchend\").pipe(\r\n            map((touchEnd: TouchEvent) => touchEnd)\r\n        )\r\n    }\r\n}"],"mappings":"AAAA,SAAQA,MAAM,EAAEC,SAAS,EAAEC,GAAG,QAAmB,MAAM;AAEvD,OAAM,MAAOC,iBAAiB;EAGnB,OAAOC,mBAAmBA,CAACC,GAAa;IAC3C,OAAOJ,SAAS,CAACI,GAAG,EAAE,aAAa,CAAC,CAACC,IAAI,CACrCJ,GAAG,CAAEK,WAAyB,IAAKA,WAAW,CAAC,CAClD;EACL;EAEO,OAAOC,mBAAmBA,CAACH,GAAa;IAC3C,OAAOJ,SAAS,CAACI,GAAG,EAAE,aAAa,CAAC,CAACC,IAAI,CACrCN,MAAM,CAAES,WAAyB,IAAKA,WAAW,CAACC,QAAQ,GAAG,CAAC,CAAC,CAClE;EACL;EAEO,OAAOC,iBAAiBA,CAACN,GAAa;IACzC,OAAOJ,SAAS,CAACI,GAAG,EAAE,WAAW,CAAC,CAACC,IAAI,CACnCJ,GAAG,CAAEU,SAAuB,IAAKA,SAAS,CAAC,CAC9C;EACL;EAEO,OAAOC,kBAAkBA,CAACR,GAAa;IAC1C,OAAOJ,SAAS,CAACI,GAAG,EAAE,YAAY,CAAC,CAACC,IAAI,CACpCJ,GAAG,CAAEY,UAAsB,IAAKA,UAAU,CAAC,CAC9C;EACL;EAEO,OAAOC,iBAAiBA,CAACV,GAAa;IACzC,OAAOJ,SAAS,CAACI,GAAG,EAAE,WAAW,CAAC,CAACC,IAAI,CACnCJ,GAAG,CAAEc,SAAqB,IAAKA,SAAS,CAAC,CAC5C;EACL;EAEO,OAAOC,gBAAgBA,CAACZ,GAAa;IACxC,OAAOJ,SAAS,CAACI,GAAG,EAAE,UAAU,CAAC,CAACC,IAAI,CAClCJ,GAAG,CAAEgB,QAAoB,IAAKA,QAAQ,CAAC,CAC1C;EACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}