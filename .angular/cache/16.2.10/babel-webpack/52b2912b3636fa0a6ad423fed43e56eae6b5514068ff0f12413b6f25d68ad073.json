{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { UserActionManager } from \"./user-action-manager\";\nimport * as i0 from \"@angular/core\";\nexport var EventType;\n(function (EventType) {\n  EventType[EventType[\"PointerEvent\"] = 0] = \"PointerEvent\";\n  EventType[EventType[\"TouchEvent\"] = 1] = \"TouchEvent\";\n})(EventType || (EventType = {}));\nexport class AppComponent {\n  constructor(ref) {\n    this.ref = ref;\n    this.EventType = EventType;\n    this.pointerActive = false;\n    this.activeEventType$$ = new Subject();\n    this.subscriptions = [];\n  }\n  ngOnInit() {\n    this.activeEventType$$.asObservable().subscribe(eventType => {\n      console.log('sub', eventType);\n      eventType === EventType.PointerEvent ? this.addPointerEventListeners() : this.addTouchEventListeners();\n    });\n  }\n  ngOnDestroy() {\n    this.activeEventType$$.unsubscribe();\n  }\n  ngAfterViewInit() {\n    this.canvas = document.querySelector('#Canvas');\n    this.canvas2d = this.canvas.getContext('2d');\n    this.canvas.width = window.innerWidth;\n    this.canvas.height = window.innerHeight;\n  }\n  addPointerEventListeners() {\n    this.unsubscribeAll(this.subscriptions);\n    this.subscriptions.push(UserActionManager.getPointerDownEvent(this.ref.nativeElement).subscribe(val => {\n      console.log(\"pointerDown\", val);\n    }));\n    this.subscriptions.push(UserActionManager.getPointerMoveEvent(this.ref.nativeElement).subscribe(val => {\n      console.log(\"pointerMove\", val);\n    }));\n    this.subscriptions.push(UserActionManager.getPointerUpEvent(this.ref.nativeElement).subscribe(val => {\n      console.log(\"pointerUp\", val);\n    }));\n  }\n  addTouchEventListeners() {\n    this.unsubscribeAll(this.subscriptions);\n    this.subscriptions.push(UserActionManager.getTouchStartEvent(this.ref.nativeElement).subscribe(val => {\n      console.log(\"touchStart\", val);\n    }));\n    this.subscriptions.push(UserActionManager.getTouchMoveEvent(this.ref.nativeElement).subscribe(val => {\n      console.log(\"touchMove\", val);\n    }));\n    this.subscriptions.push(UserActionManager.getTouchEndEvent(this.ref.nativeElement).subscribe(val => {\n      console.log(\"touchEnd\", val);\n    }));\n  }\n  unsubscribeAll(subscriptions) {\n    subscriptions.forEach(sub => sub.unsubscribe());\n  }\n  // private addPointerEventListeners(): void {\n  //   this.removeAllEventListeners();\n  //   document.addEventListener('pointerdown', (event: PointerEvent) => {\n  //     this.pointerActive = true;\n  //     this.setStartOrEndPoint(event.x, event.y, 'red');\n  //   });\n  //\n  //   document.addEventListener('pointermove', (event: PointerEvent) => {\n  //     if (this.pointerActive) {\n  //       console.log('pointer move', event.x, event.y);\n  //       this.drawOnCanvas(event.x, event.y, 'green');\n  //     }\n  //   });\n  //\n  //   document.addEventListener('pointerup', (event: PointerEvent) => {\n  //     this.pointerActive = false;\n  //     this.setStartOrEndPoint(event.x, event.y, 'blue');\n  //   });\n  // }\n  // private addTouchEventListeners(): void {\n  //   this.removeAllEventListeners();\n  //   document.addEventListener('touchstart', (event: TouchEvent) => {\n  //     event.preventDefault();\n  //     this.setStartOrEndPoint(\n  //       event.touches[0].clientX,\n  //       event.touches[0].clientY,\n  //       'red'\n  //     );\n  //   });\n  //\n  //   document.addEventListener('touchmove', (event: TouchEvent) => {\n  //     event.preventDefault();\n  //     console.log('touchmove');\n  //     this.drawOnCanvas(\n  //       event.touches[0].clientX,\n  //       event.touches[0].clientY,\n  //       'green'\n  //     );\n  //   });\n  //\n  //   document.addEventListener('touchend', (event: TouchEvent) => {\n  //     this.setStartOrEndPoint(\n  //       this.lastCoordinates.lastX,\n  //       this.lastCoordinates.lastY,\n  //       'blue'\n  //     );\n  //   });\n  // }\n  removeAllEventListeners() {\n    // document.removeAllListeners();\n  }\n  setStartOrEndPoint(x, y, color) {\n    this.canvas2d.fillStyle = color;\n    this.canvas2d.fillRect(x, y, 3, 3);\n    this.lastCoordinates = {\n      lastX: x,\n      lastY: y\n    };\n  }\n  drawOnCanvas(x, y, color) {\n    this.canvas2d.beginPath();\n    this.canvas2d.moveTo(this.lastCoordinates.lastX, this.lastCoordinates.lastY);\n    this.canvas2d.lineTo(x, y);\n    this.canvas2d.strokeStyle = '#000000';\n    this.canvas2d.stroke();\n    this.lastCoordinates = {\n      lastX: x,\n      lastY: y\n    };\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 6,\n    vars: 0,\n    consts: [[3, \"click\"], [\"id\", \"Canvas\", 2, \"border\", \"1px solid grey\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_0_listener() {\n          return ctx.activeEventType$$.next(ctx.EventType.PointerEvent);\n        });\n        i0.ɵɵtext(1, \" PointerEvents\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_2_listener() {\n          return ctx.activeEventType$$.next(ctx.EventType.TouchEvent);\n        });\n        i0.ɵɵtext(3, \" TouchEvents\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"br\")(5, \"canvas\", 1);\n      }\n    },\n    styles: [\"canvas[_ngcontent-%COMP%] {\\n  display: block;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFjO0FBQ2hCIiwic291cmNlc0NvbnRlbnQiOlsiY2FudmFzIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["Subject","UserActionManager","EventType","AppComponent","constructor","ref","pointerActive","activeEventType$$","subscriptions","ngOnInit","asObservable","subscribe","eventType","console","log","PointerEvent","addPointerEventListeners","addTouchEventListeners","ngOnDestroy","unsubscribe","ngAfterViewInit","canvas","document","querySelector","canvas2d","getContext","width","window","innerWidth","height","innerHeight","unsubscribeAll","push","getPointerDownEvent","nativeElement","val","getPointerMoveEvent","getPointerUpEvent","getTouchStartEvent","getTouchMoveEvent","getTouchEndEvent","forEach","sub","removeAllEventListeners","setStartOrEndPoint","x","y","color","fillStyle","fillRect","lastCoordinates","lastX","lastY","drawOnCanvas","beginPath","moveTo","lineTo","strokeStyle","stroke","_","i0","ɵɵdirectiveInject","ElementRef","_2","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","AppComponent_Template_button_click_0_listener","next","ɵɵtext","ɵɵelementEnd","AppComponent_Template_button_click_2_listener","TouchEvent","ɵɵelement"],"sources":["C:\\Workspace\\touchMove_delay\\src\\app\\app.component.ts","C:\\Workspace\\touchMove_delay\\src\\app\\app.component.html"],"sourcesContent":["import {Component, ElementRef, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subject, Subscription} from 'rxjs';\r\nimport {UserActionManager} from \"./user-action-manager\";\r\n\r\nexport enum EventType {\r\n  PointerEvent,\r\n  TouchEvent,\r\n}\r\n\r\nexport interface LastCoordinates {\r\n  lastX: number;\r\n  lastY: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n  public EventType = EventType;\r\n  private pointerActive: boolean = false;\r\n  public activeEventType$$: Subject<EventType> = new Subject<EventType>();\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  private canvas: HTMLCanvasElement;\r\n  private canvas2d;\r\n\r\n  private lastCoordinates: LastCoordinates;\r\n\r\n  constructor(private readonly ref: ElementRef) {}\r\n\r\n  ngOnInit() {\r\n    this.activeEventType$$.asObservable().subscribe((eventType: EventType) => {\r\n      console.log('sub', eventType);\r\n      eventType === EventType.PointerEvent\r\n        ? this.addPointerEventListeners()\r\n        : this.addTouchEventListeners();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.activeEventType$$.unsubscribe();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.canvas = document.querySelector('#Canvas');\r\n    this.canvas2d = this.canvas.getContext('2d');\r\n    this.canvas.width = window.innerWidth;\r\n    this.canvas.height = window.innerHeight;\r\n  }\r\n\r\n  private addPointerEventListeners() {\r\n    this.unsubscribeAll(this.subscriptions);\r\n    this.subscriptions.push(\r\n        UserActionManager.getPointerDownEvent(this.ref.nativeElement).subscribe(\r\n            val => {console.log(\"pointerDown\", val)}\r\n        )\r\n    )\r\n\r\n    this.subscriptions.push(\r\n        UserActionManager.getPointerMoveEvent(this.ref.nativeElement).subscribe(\r\n            val => {console.log(\"pointerMove\", val)}\r\n        )\r\n    )\r\n\r\n    this.subscriptions.push(\r\n        UserActionManager.getPointerUpEvent(this.ref.nativeElement).subscribe(\r\n            val => {console.log(\"pointerUp\", val)}\r\n        )\r\n    )\r\n  }\r\n\r\n  private addTouchEventListeners(): void {\r\n    this.unsubscribeAll(this.subscriptions);\r\n    this.subscriptions.push(\r\n        UserActionManager.getTouchStartEvent(this.ref.nativeElement).subscribe(\r\n            val => {console.log(\"touchStart\", val)}\r\n        )\r\n    )\r\n\r\n    this.subscriptions.push(\r\n        UserActionManager.getTouchMoveEvent(this.ref.nativeElement).subscribe(\r\n            val => {console.log(\"touchMove\", val)}\r\n        )\r\n    )\r\n\r\n    this.subscriptions.push(\r\n        UserActionManager.getTouchEndEvent(this.ref.nativeElement).subscribe(\r\n            val => {console.log(\"touchEnd\", val)}\r\n        )\r\n    )\r\n  }\r\n\r\n  private unsubscribeAll(subscriptions: Subscription[]) {\r\n    subscriptions.forEach(sub => sub.unsubscribe())\r\n  }\r\n\r\n  // private addPointerEventListeners(): void {\r\n  //   this.removeAllEventListeners();\r\n  //   document.addEventListener('pointerdown', (event: PointerEvent) => {\r\n  //     this.pointerActive = true;\r\n  //     this.setStartOrEndPoint(event.x, event.y, 'red');\r\n  //   });\r\n  //\r\n  //   document.addEventListener('pointermove', (event: PointerEvent) => {\r\n  //     if (this.pointerActive) {\r\n  //       console.log('pointer move', event.x, event.y);\r\n  //       this.drawOnCanvas(event.x, event.y, 'green');\r\n  //     }\r\n  //   });\r\n  //\r\n  //   document.addEventListener('pointerup', (event: PointerEvent) => {\r\n  //     this.pointerActive = false;\r\n  //     this.setStartOrEndPoint(event.x, event.y, 'blue');\r\n  //   });\r\n  // }\r\n\r\n  // private addTouchEventListeners(): void {\r\n  //   this.removeAllEventListeners();\r\n  //   document.addEventListener('touchstart', (event: TouchEvent) => {\r\n  //     event.preventDefault();\r\n  //     this.setStartOrEndPoint(\r\n  //       event.touches[0].clientX,\r\n  //       event.touches[0].clientY,\r\n  //       'red'\r\n  //     );\r\n  //   });\r\n  //\r\n  //   document.addEventListener('touchmove', (event: TouchEvent) => {\r\n  //     event.preventDefault();\r\n  //     console.log('touchmove');\r\n  //     this.drawOnCanvas(\r\n  //       event.touches[0].clientX,\r\n  //       event.touches[0].clientY,\r\n  //       'green'\r\n  //     );\r\n  //   });\r\n  //\r\n  //   document.addEventListener('touchend', (event: TouchEvent) => {\r\n  //     this.setStartOrEndPoint(\r\n  //       this.lastCoordinates.lastX,\r\n  //       this.lastCoordinates.lastY,\r\n  //       'blue'\r\n  //     );\r\n  //   });\r\n  // }\r\n\r\n  private removeAllEventListeners(): void {\r\n    // document.removeAllListeners();\r\n  }\r\n\r\n  private setStartOrEndPoint(x: number, y: number, color: string) {\r\n    this.canvas2d.fillStyle = color;\r\n    this.canvas2d.fillRect(x, y, 3, 3);\r\n    this.lastCoordinates = { lastX: x, lastY: y };\r\n  }\r\n\r\n  private drawOnCanvas(x: number, y: number, color: string) {\r\n    this.canvas2d.beginPath();\r\n    this.canvas2d.moveTo(\r\n      this.lastCoordinates.lastX,\r\n      this.lastCoordinates.lastY\r\n    );\r\n    this.canvas2d.lineTo(x, y);\r\n    this.canvas2d.strokeStyle = '#000000';\r\n    this.canvas2d.stroke();\r\n\r\n    this.lastCoordinates = { lastX: x, lastY: y };\r\n  }\r\n}\r\n","<button (click)=\"activeEventType$$.next(EventType.PointerEvent)\">\r\n  PointerEvents\r\n</button>\r\n<button (click)=\"activeEventType$$.next(EventType.TouchEvent)\">\r\n  TouchEvents\r\n</button>\r\n<br />\r\n<canvas id=\"Canvas\" style=\"border:1px solid grey;\"> </canvas>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}