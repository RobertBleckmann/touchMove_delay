{"ast":null,"code":"import { UserActionManager } from \"./user-action-manager\";\nimport { withLatestFrom } from \"rxjs\";\nimport { EventType } from \"./models\";\nimport * as i0 from \"@angular/core\";\nexport class DrawDirective {\n  constructor(elementRef) {\n    this.elementRef = elementRef;\n    this.activeEventType = EventType.TouchEvent;\n    this.subscriptions = [];\n  }\n  addPointerEventListeners() {\n    this.unsubscribeAll(this.subscriptions);\n    this.subscriptions.push(UserActionManager.getPointerDownEvent(this.elementRef.nativeElement).subscribe(val => {\n      console.log(\"pointerDown\", val);\n      this.setStartOrEndPoint(val.x, val.y, 'red');\n    }));\n    this.subscriptions.push(UserActionManager.getPointerMoveEvent(this.elementRef.nativeElement).subscribe(val => {\n      console.log(\"pointerMove\", val);\n      this.drawOnCanvas(val.x, val.y, 'black');\n    }));\n    this.subscriptions.push(UserActionManager.getPointerUpEvent(this.elementRef.nativeElement).subscribe(val => {\n      console.log(\"pointerUp\", val);\n      this.setStartOrEndPoint(val.x, val.y, 'pink');\n    }));\n  }\n  addTouchEventListeners() {\n    this.unsubscribeAll(this.subscriptions);\n    this.subscriptions.push(UserActionManager.getTouchStartEvent(this.elementRef.nativeElement).subscribe(val => {\n      console.log(\"touchStart\", val);\n      this.setStartOrEndPoint(val.touches[0].clientX, val.touches[0].clientY, 'red');\n    }));\n    this.subscriptions.push(UserActionManager.getTouchMoveEvent(this.elementRef.nativeElement).subscribe(val => {\n      console.log(\"touchMove\", val);\n      this.drawOnCanvas(val.touches[0].clientX, val.touches[0].clientY, 'black');\n    }));\n    this.subscriptions.push(UserActionManager.getTouchEndEvent(this.elementRef.nativeElement).pipe(withLatestFrom(UserActionManager.getTouchMoveEvent(this.elementRef.nativeElement))).subscribe(([_, lastTouchMove]) => {\n      console.log(\"touchEnd\", lastTouchMove);\n      this.setStartOrEndPoint(lastTouchMove.touches[0].clientX, lastTouchMove.touches[0].clientY, 'pink');\n    }));\n  }\n  unsubscribeAll(subscriptions) {\n    subscriptions.forEach(sub => sub.unsubscribe());\n  }\n  setStartOrEndPoint(x, y, color) {\n    this.elementRef.nativeElement.fillStyle = color;\n    this.elementRef.nativeElement.fillRect(x, y, 3, 3);\n    this.lastCoordinates = {\n      lastX: x,\n      lastY: y\n    };\n  }\n  drawOnCanvas(x, y, color) {\n    this.elementRef.nativeElement.beginPath();\n    this.elementRef.nativeElement.moveTo(this.lastCoordinates.lastX, this.lastCoordinates.lastY);\n    this.elementRef.nativeElement.lineTo(x, y);\n    this.elementRef.nativeElement.strokeStyle = '#000000';\n    this.elementRef.nativeElement.stroke();\n    this.lastCoordinates = {\n      lastX: x,\n      lastY: y\n    };\n  }\n  static #_ = this.ɵfac = function DrawDirective_Factory(t) {\n    return new (t || DrawDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: DrawDirective,\n    selectors: [[\"\", \"draw\", \"\"]],\n    inputs: {\n      activeEventType: \"activeEventType\"\n    }\n  });\n}","map":{"version":3,"names":["UserActionManager","withLatestFrom","EventType","DrawDirective","constructor","elementRef","activeEventType","TouchEvent","subscriptions","addPointerEventListeners","unsubscribeAll","push","getPointerDownEvent","nativeElement","subscribe","val","console","log","setStartOrEndPoint","x","y","getPointerMoveEvent","drawOnCanvas","getPointerUpEvent","addTouchEventListeners","getTouchStartEvent","touches","clientX","clientY","getTouchMoveEvent","getTouchEndEvent","pipe","_","lastTouchMove","forEach","sub","unsubscribe","color","fillStyle","fillRect","lastCoordinates","lastX","lastY","beginPath","moveTo","lineTo","strokeStyle","stroke","i0","ɵɵdirectiveInject","ElementRef","_2","selectors","inputs"],"sources":["C:\\Workspace\\touchMove_delay\\src\\app\\draw.directive.ts"],"sourcesContent":["import {Directive, ElementRef, Input, OnInit} from \"@angular/core\";\r\nimport {UserActionManager} from \"./user-action-manager\";\r\nimport {Subscription, withLatestFrom} from \"rxjs\";\r\nimport {LastCoordinates} from \"./app.component\";\r\nimport {EventType} from \"./models\";\r\n\r\n@Directive({\r\n    selector: \"[draw]\"\r\n})\r\nexport class DrawDirective {\r\n\r\n    @Input()\r\n    public activeEventType: EventType = EventType.TouchEvent;\r\n\r\n    private subscriptions: Subscription[] = [];\r\n    private lastCoordinates: LastCoordinates;\r\n\r\n    constructor(\r\n        private readonly elementRef: ElementRef\r\n    ) {\r\n\r\n    }\r\n\r\n    private addPointerEventListeners() {\r\n        this.unsubscribeAll(this.subscriptions);\r\n        this.subscriptions.push(\r\n            UserActionManager.getPointerDownEvent(this.elementRef.nativeElement).subscribe(\r\n                val => {\r\n                    console.log(\"pointerDown\", val);\r\n                    this.setStartOrEndPoint(val.x, val.y, 'red');\r\n                }\r\n            )\r\n        )\r\n\r\n        this.subscriptions.push(\r\n            UserActionManager.getPointerMoveEvent(this.elementRef.nativeElement).subscribe(\r\n                val => {\r\n                    console.log(\"pointerMove\", val);\r\n                    this.drawOnCanvas(val.x, val.y, 'black');\r\n                }\r\n            )\r\n        )\r\n\r\n        this.subscriptions.push(\r\n            UserActionManager.getPointerUpEvent(this.elementRef.nativeElement).subscribe(\r\n                val => {\r\n                    console.log(\"pointerUp\", val);\r\n                    this.setStartOrEndPoint(val.x, val.y, 'pink');\r\n                }\r\n            )\r\n        )\r\n    }\r\n\r\n    private addTouchEventListeners(): void {\r\n        this.unsubscribeAll(this.subscriptions);\r\n        this.subscriptions.push(\r\n            UserActionManager.getTouchStartEvent(this.elementRef.nativeElement).subscribe(\r\n                val => {\r\n                    console.log(\"touchStart\", val);\r\n                    this.setStartOrEndPoint(val.touches[0].clientX, val.touches[0].clientY, 'red');\r\n                }\r\n            )\r\n        )\r\n\r\n        this.subscriptions.push(\r\n            UserActionManager.getTouchMoveEvent(this.elementRef.nativeElement).subscribe(\r\n                val => {\r\n                    console.log(\"touchMove\", val);\r\n                    this.drawOnCanvas(val.touches[0].clientX, val.touches[0].clientY, 'black');\r\n                }\r\n            )\r\n        )\r\n\r\n        this.subscriptions.push(\r\n            UserActionManager.getTouchEndEvent(this.elementRef.nativeElement).pipe(withLatestFrom(UserActionManager.getTouchMoveEvent(this.elementRef.nativeElement))).subscribe(\r\n                ([_, lastTouchMove]) => {\r\n                    console.log(\"touchEnd\", lastTouchMove);\r\n                    this.setStartOrEndPoint(lastTouchMove.touches[0].clientX, lastTouchMove.touches[0].clientY, 'pink');\r\n                }\r\n            )\r\n        )\r\n    }\r\n\r\n    private unsubscribeAll(subscriptions: Subscription[]) {\r\n        subscriptions.forEach(sub => sub.unsubscribe())\r\n    }\r\n\r\n    private setStartOrEndPoint(x: number, y: number, color: string) {\r\n        this.elementRef.nativeElement.fillStyle = color;\r\n        this.elementRef.nativeElement.fillRect(x, y, 3, 3);\r\n        this.lastCoordinates = { lastX: x, lastY: y };\r\n    }\r\n\r\n    private drawOnCanvas(x: number, y: number, color: string) {\r\n        this.elementRef.nativeElement.beginPath();\r\n        this.elementRef.nativeElement.moveTo(\r\n            this.lastCoordinates.lastX,\r\n            this.lastCoordinates.lastY\r\n        );\r\n        this.elementRef.nativeElement.lineTo(x, y);\r\n        this.elementRef.nativeElement.strokeStyle = '#000000';\r\n        this.elementRef.nativeElement.stroke();\r\n\r\n        this.lastCoordinates = { lastX: x, lastY: y };\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}